# Generated by Django 5.0.3 on 2024-03-18 00:01

import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Provineer',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(blank=True, default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='Superuser status')),
                ('email', models.EmailField(help_text='Enter your email address', max_length=254, primary_key=True, serialize=False, validators=[django.core.validators.EmailValidator(message='Enter a valid email address')], verbose_name='Email')),
                ('username', models.CharField(blank=True, error_messages={'unique': 'A user with that username already exists.'}, help_text='Input username. 128 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=128, null=True, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Username')),
                ('first_name', models.CharField(blank=True, help_text='Enter your First name', max_length=128, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, help_text='Enter your Last name', max_length=128, null=True, verbose_name='Last name')),
                ('middle_name', models.CharField(blank=True, help_text='Enter your Middle name', max_length=128, null=True, verbose_name='Middle name')),
                ('email_verified', models.BooleanField(blank=True, default=False, verbose_name='Email Verified')),
                ('is_staff', models.BooleanField(blank=True, default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(blank=True, default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_of_birth', models.DateField(blank=True, help_text='Enter your date of birth', null=True, verbose_name='Date of Birth')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date joined')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='Date modified')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this provineer belongs to. A provineer will get all permissions granted to each of their groups.', related_name='provineer_set', related_query_name='provineer', to='auth.group', verbose_name='Groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this provineer.', related_name='provineer_set', related_query_name='provineer', to='auth.permission', verbose_name='Provineer permissions')),
            ],
            options={
                'verbose_name': 'Provineer',
                'verbose_name_plural': 'Provineers',
                'db_table': 'provineer',
            },
        ),
    ]
